<?php

namespace App\Controller\Admin;

use App\Entity\Post;
use Doctrine\ORM\EntityManagerInterface;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextEditorField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use EasyCorp\Bundle\EasyAdminBundle\Field\ImageField;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;


class PostCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return Post::class;
    }

    //apres soumission form
    public function persistEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        if (!$entityInstance instanceof Post) return;
        $entityInstance->setUpdatedBy($this->getUser());
        $entityInstance->setAuthor($this->getUser());

        parent::persistEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }

    //avant creation form
    public function createEntity(string $entityFqcn)
    {
        $post = new Post();
        $post->setCreatedAt(new \DateTimeImmutable());
        $post->setUpdatedAt(new \DateTimeImmutable());
        return $post;
    }

    //update form
    public function updateEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        if (!$entityInstance instanceof Post) return;
        $entityInstance->setUpdatedBy($this->getUser());
        $entityInstance->setUpdatedAt(new \DateTimeImmutable());

        parent::updateEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }

    public function configureFields(string $pageName): iterable
    {
        return [
            TextField::new('title')->setLabel('Titre'),
            AssociationField::new('author')->setLabel('Auteur')->hideOnForm(),
            ImageField::new('featuredImage')->setUploadDir('public/images/posts')->setBasePath('/images/posts')->setLabel('Image à la une'),
            TextEditorField::new('content')->setLabel('Contenu'),
        ];
    }

    public function configureCrud(Crud $crud): Crud
    {
        return $crud
            ->setPageTitle('index', 'Articles')
            ->setEntityLabelInPlural('Articles')
            ->setEntityLabelInSingular('Article')
            ->setPaginatorPageSize(10)
            ->setPageTitle('new', 'Créer un nouvel article')
            ->setFormOptions([]); // autres options
    }


}
